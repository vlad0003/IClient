@using IClient.BusinessCore
@using IClient.UseCases
@using System.ComponentModel.DataAnnotations
@inject NavigationManager nav
@inject IDeleteInventoryUseCase DeleteInventoryUseCase


@if (Inventory != null)
{
    <tr>
        <td>@Inventory.Inventoryname</td>
        <td>@Inventory.Quantity</td>
        <td>@Inventory.Price $</td>
        <td>
            <AuthorizeView Roles="Admin">
            <button type="button" class="btn btn-outline-primary" @onclick="@(() => EditInventory(Inventory.InventoryId))">Редактировать</button>
            <button type="button" class="btn btn-outline-danger" @onclick="@(async () => await DeleteInventory(Inventory))">Удалить</button>
            </AuthorizeView>
        </td>
    </tr>
}


@code {

    [Parameter]
    public Inventory? Inventory { get; set; }
    
    
    [Parameter]
    public EventCallback OnInventoryDeleted { get; set; }

    private void EditInventory(int invId)
    {
        nav.NavigateTo($"/editinventory/{invId}");
    }
    
    private async Task DeleteInventory(Inventory inventory)
    {
        await DeleteInventoryUseCase.ExecuteAsync(Inventory.InventoryId);
        await OnInventoryDeleted.InvokeAsync();
    }
}