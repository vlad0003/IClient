@page "/purchase"
@inject IPurchaseInventoryUseCase PurchaseInventoryUseCase
@using Microsoft.AspNetCore.Components
@using IClient.UseCases
@using IClient.viewModels
@inject IToastService _toastService
@using IClient.BusinessCore
@using Blazored.Toast.Services
<h3 class="text-center ">Покупка деталей</h3>
<br/>

@if (purchaseViewModel != null)
{
    <EditForm Model="purchaseViewModel" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group mb-2">
            <label class="mb-2" for="po">Ордер покупки</label>
            <InputText id="po" @bind-Value="purchaseViewModel.PurchaseOrder" class="form-control"></InputText>
        </div>

        <div class="form-group mt-2">
            <label class="text-black" for="inv">Инвентарь для покупки</label>
            <ViewInventoriesComponent 
                OnSelectInventory="OnSelectInventory"
                DisplaySearchResult="true"></ViewInventoriesComponent>                   
            <InputText id="inv" class="form-control" @bind-Value="purchaseViewModel.InventoryName" disabled></InputText>            
            <input type="hidden" value="@purchaseViewModel.InventoryId" />  
            @if (selectedInventory != null)
            {
                <text>Цена:</text>
                @selectedInventory?.Price.ToString();
            }
            
        </div>

        <div class="form-group mt-3">
            <label for="qty">Кол-во</label>
            <InputNumber id="qty" @bind-Value="purchaseViewModel.QuantityToPurchase" class="form-control"></InputNumber>
        </div>
        <br/>
        <button type="submit" class="btn btn-success" @onclick="@(() => _toastService.ShowInfo("Предеты закум"))" >Купить</button>

    </EditForm>
}

@code {
    private PurchaseViewModel purchaseViewModel = new PurchaseViewModel();
    private Inventory selectedInventory;

    private void OnSelectInventory(Inventory inventory)
    {
        this.selectedInventory = inventory;
        purchaseViewModel.InventoryId = inventory.InventoryId;
        purchaseViewModel.InventoryName = inventory.Inventoryname;
    }

    private async Task OnValidSubmit()
    {
        await PurchaseInventoryUseCase.ExecuteAsync(
            this.purchaseViewModel.PurchaseOrder,
            this.selectedInventory,
            this.purchaseViewModel.QuantityToPurchase,
            "Vlad"
        );

        this.purchaseViewModel = new PurchaseViewModel();
        this.selectedInventory = null;

    }

}
