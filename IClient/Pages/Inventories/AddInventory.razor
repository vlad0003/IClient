@page "/addinventory"
@inject IAddInventoryUseCase AddInventoryUseCase
@using IClient.BusinessCore
@inject NavigationManager nav
@using IClient.UseCases
@using Blazored.Toast.Services
@inject IToastService _toastService
@attribute [Authorize(Roles = "Admin")]
@attribute [Authorize]

<h3>Добавить комплектующие</h3>
<br/>

@if (inventory != null)
{
    <EditForm Model="inventory" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>
        <div class="form-group">
            <label for="name">Название</label>
            <InputText id="name" @bind-Value="inventory.Inventoryname" class="form-control"></InputText>
        </div>
        
        <div class="form-group">
            <label for="qty">Кол-во</label>
            <InputNumber id="qty" @bind-Value="inventory.Quantity" class="form-control"></InputNumber>
        </div>
        
        <div class="form-group">
            <label for="price">Цена</label>
            <InputNumber id="price" @bind-Value="inventory.Price" class="form-control"></InputNumber>
        </div>
        <button type="submit" class="btn btn-outline-success mt-3">Сохранить</button>
    </EditForm>
}

@code {
    private Inventory? inventory;
    
    protected override void OnInitialized()
    {
        base.OnInitialized();
        inventory = new Inventory();
    }

    private async Task OnValidSubmit()
    {
        if (this.inventory != null)
        {
            await AddInventoryUseCase.ExecuteAsync(this.inventory);
            nav.NavigateTo("/inventories");
            _toastService.ShowSuccess("Предмет добавлен");
        }
    }

}