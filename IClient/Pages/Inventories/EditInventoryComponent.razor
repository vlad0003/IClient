@page "/editinventory/{invId:int}"
@using IClient.UseCases
@using IClient.BusinessCore
@inject NavigationManager nav
@inject IViewInventoryById ViewInventoryById
@inject IEditInventoryUseCase EditInventoryUseCase

@if (this.inventory != null)
{
    <EditForm Model="inventory" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>
        <div class="form-group">
            <label for="name">Inventory Name</label>
            <InputText id="name" @bind-Value="inventory.Inventoryname" class="form-control"></InputText>
        </div>
        
        <div class="form-group">
            <label for="qty">Quantity</label>
            <InputNumber id="qty" @bind-Value="inventory.Quantity" class="form-control"></InputNumber>
        </div>
        
        <div class="form-group">
            <label for="price">Price</label>
            <InputNumber id="price" @bind-Value="inventory.Price" class="form-control"></InputNumber>
        </div>
        <button type="submit" class="btn btn-outline-success mt-3">Save</button>
    </EditForm>
}


@code {
    [Parameter]
    public int InvId { get; set; }

    private Inventory? inventory;

    protected override async Task OnInitializedAsync()
    {
        this.inventory = await ViewInventoryById.ExecuteAsync(InvId);
    }

    public async Task OnValidSubmit()
    {
        if (this.inventory != null)
        {
            await EditInventoryUseCase.ExecuteAsync(this.inventory); 
            nav.NavigateTo("/inventories");
        }
    }
}